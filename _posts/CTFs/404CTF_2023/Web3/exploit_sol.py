from web3 import Web3
from solcx import compile_standard, install_solc
install_solc('0.8.18')

import json
with open("./Jeu.sol", "r") as file:
     simple_storage_contract = file.read()

compiled_sol = compile_standard(
    {
        "language": "Solidity",
        "sources": {"Jeu.sol": {"content": simple_storage_contract}},
        "settings": {
            "outputSelection": {
                "*": {"*": ["abi", "metadata", "evm.bytecode", "evm.sourceMap"]}
            }
        },
    },
    solc_version="0.8.18",
)

bytecode = compiled_sol["contracts"]["Jeu.sol"]["Jeu"]["evm"]["bytecode"]["object"]
abi = compiled_sol["contracts"]["Jeu.sol"]["Jeu"]["abi"]



node_url = 'https://blockchain.challenges.404ctf.fr'
chain_id = 31337
web3 = Web3(Web3.HTTPProvider(node_url))

address = "0xf751af0CD23440F25aE5E12606423E0570293331"

print(web3.is_connected(), web3.eth.chain_id)

contract = web3.eth.contract(address = address, abi=abi)

print("isSolved = ",contract.functions.guess((contract.functions.a().call() * 0x4c118e  + contract.functions.c().call()) % contract.functions.m().call()).call())
contract.functions.guess((contract.functions.a().call() * 0x4c118e  + contract.functions.c().call()) % contract.functions.m().call()).transact()